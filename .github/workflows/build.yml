name: Build

on:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0        
        
      - name: Restore dependencies
        run: dotnet restore

      - name: Run Python tests
        run: |
          python -m pip install --upgrade pip
          pip install pytest argostranslate
          pytest Tools

      - name: Discover .csproj
        id: discover_csproj
        run: |
          # Find the first .csproj outside bin/obj directories.
          # Adjust if you have multiple .csproj files.
          csproj_file=$(find . -type f -name '*.csproj' \
            -not -path '*/bin/*' \
            -not -path '*/obj/*' | head -n 1)
          
          echo "csproj_file=$csproj_file" >> $GITHUB_OUTPUT
        
      - name: Get DLL name
        id: get_dll_name
        run: |
          csproj="${{ steps.discover_csproj.outputs.csproj_file }}"
          dll_name=$(basename "$csproj" .csproj)
          echo "dll_name=$dll_name" >> $GITHUB_OUTPUT

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extract version from .csproj
        id: extract_version
        run: |
          version=$(xmllint --xpath "string(//Project/PropertyGroup/Version)" "${{ steps.discover_csproj.outputs.csproj_file }}")
          echo "version=$version" >> $GITHUB_ENV

      - name: Update thunderstore.toml
        run: |
          sed -i "s/versionNumber = \".*\"/versionNumber = \"${{ env.version }}\"/" thunderstore.toml

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if [ -n "$(git status --porcelain thunderstore.toml)" ]; then
            git add thunderstore.toml
            git commit -m "chore: Update thunderstore.toml version to ${{ env.version }}"
            git push
          else
            echo "No changes to commit in thunderstore.toml"
          fi
          
      - name: Create secrets.json
        run: |
          mkdir -p /home/runner/work/Bloodcraft/Bloodcraft/Resources
          echo '{
            "NEW_SHARED_KEY": "${{ secrets.NEW_SHARED_KEY }}"
          }' > /home/runner/work/Bloodcraft/Bloodcraft/Resources/secrets.json
          
      - name: Build (Release)
        run: dotnet build . --configuration Release -p:Version=${{ env.version }} -p:RunGenerateREADME=false

      - name: Check tokens and translations
        run: |
          set -e
          python Tools/fix_tokens.py --check-only Resources/Localization/Messages/*.json
          dotnet run --project Bloodcraft.csproj -p:RunGenerateREADME=false -- check-translations

      - name: GH Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'workflow_dispatch'
        with:
          body: Manual pre-release of ${{ env.version }}
          name: v${{ env.version }}
          fail_on_unmatched_files: true
          prerelease: true
          tag_name: v${{ env.version }}
          files: |
            ./bin/Release/net6.0/${{ steps.get_dll_name.outputs.dll_name }}.dll
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
